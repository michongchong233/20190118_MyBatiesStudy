<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mickey.mapper.User"><!-- namespace，理解為實現類的全路徑，包名+類名 -->
	<!-- 
	id，方法名；parameterType，定義參數類型；resultType，返回值類型
	若方法返回類型是list，則在resultType中寫lise的泛型類型，因為mybaties是對JDBC封裝，它是一行一行讀取數據的
	 -->
	<select id="selectAll" resultType="com.mickey.pojo.User">
		<!-- 
		pojo盡可能地寫和資料庫的字段名一致，否則要另外寫sql的別名為pojo類的屬性名 
		如：select uid, uname newUname, password gender, age from T41_UserImformation;
		-->
		select * from T41_UserImformation;
	</select>
	<select id="selectCount" resultType="int">
		select count(*) from T41_UserImformation;
	</select>
	<select id="selectMap" resultType="com.mickey.pojo.User">
		select * from T41_UserImformation;
	</select>
	<select id="selectById" parameterType="int" resultType="com.mickey.pojo.User">
		select * from T41_UserImformation where uid=#{0}<!-- #{0}表示第1個參數 -->
	</select>
	<select id="selectById_2" parameterType="com.mickey.pojo.User" resultType="com.mickey.pojo.User">
		select * from T41_UserImformation where uid=${uid}<!-- ${uid}表示從User對象中取屬性uid -->
	</select>
	<select id="selectById_3" parameterType="map" resultType="com.mickey.pojo.User">
		select * from T41_UserImformation where uid=#{uid} and uname=#{uname}<!-- 從map中取key的值 -->
	</select>
	<!-- 分頁查詢 -->
	<select id="limitPage" parameterType="map" resultType="user">
		select * from T41_UserImformation limit #{pageStart}, #{pageSize}
	</select>
</mapper>

